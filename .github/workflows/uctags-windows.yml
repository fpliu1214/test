# Copyright: 2022 fpliu
# License: GPL-2.0-or-later

name: Windows

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        version: [2019, 2022]
        target-arch: [x86, x64]

    runs-on: windows-${{ matrix.version }}

    defaults:
      run:
        shell: cmd /C {0}

    steps:
      - run: choco install -y file 7zip

      - uses: actions/checkout@v3
        with:
          repository: 'universal-ctags/ctags'

      - name: build
        run: |
          if "${{ matrix.version }}" == "2019" (
            set "XX= (x86)"
          ) else (
            set "XX="
          )

          if "${{ matrix.target-arch }}" == "x64" (
            set "TARGET_ARCH=amd64"
          ) else (
            set "TARGET_ARCH=x86"
          )


          :: Setup MSVC build environment
          @rem https://docs.microsoft.com/en-us/cpp/build/building-on-the-command-line?view=msvc-170#developer_command_file_locations
          @echo on
          :: call "C:\Program Files%XX%\Microsoft Visual Studio\${{ matrix.version }}\Enterprise\Common7\Tools\VsDevCmd.bat" -host_arch=amd64 -arch=%TARGET_ARCH%
          call "C:\Program Files\Microsoft Visual Studio\${{ matrix.version }}\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" %TARGET_ARCH%

          :: Build libiconv (MSVC port)
          @echo on
          git clone --depth=1 https://github.com/koron/libiconv.git
          cd libiconv\msvc10
          nmake NODEBUG=1 NOMSVCRT=1

          :: Install libiconv
          set LIBICONV_INSTALL_DIR=${{ github.workspace }}\libiconv-installed

          mkdir          "%LIBICONV_INSTALL_DIR%\include"
          copy iconv.h   "%LIBICONV_INSTALL_DIR%\include"

          mkdir          "%LIBICONV_INSTALL_DIR%\lib"
          copy iconv.lib "%LIBICONV_INSTALL_DIR%\lib"

          copy iconv.dll "${{ github.workspace }}"

          :: Build ctags with nmake
          cd ${{ github.workspace }}
          nmake -f mk_mvc.mak WITH_ICONV=yes ICONV_DIR=%LIBICONV_INSTALL_DIR% PDB=yes

      - run: file ctags.exe
      - run: ctags.exe --version
      - run: dir
