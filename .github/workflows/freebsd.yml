# Copyright: 2022 fpliu
# License: GPL-2.0-or-later

name: FreeBSD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: macos-12

    strategy:
      fail-fast: false
      matrix:
        version: [13]
    
    env:
      RELEASE_TOKEN: ${{ secrets.RELEASE_TOKEN }}

    steps:
      - uses: actions/checkout@v3

        #- run:  vagrant init generic/freebsd${{matrix.version}}

      - name: gen run.sh
        run: |
          printf 'set -e\n' > run.sh

          export -p | grep 'GITHUB_' >> run.sh

          cat >> run.sh <<'EOF'
          run() {
            printf "\033[0;35m==>\033[0m \033[0;32m%b\n\033[0m" "$*"
            eval "$*"
          }

          run cd /home/vagrant/${{github.repository}}

          run pwd
          run ls

          run id

          run pkg install -y curl

          run curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg

          run chmod +x ppkg

          run ./ppkg setup
          run ./ppkg env
          run ./ppkg update
          run ./ppkg install uctags --link-type=static-only --install-lib=static
          run ./ppkg pack    uctags -o /home/vagrant/
          EOF

      - name: gen Vagrantfile
        run: |
          cat > Vagrantfile <<EOF
            Vagrant.configure("2") do |config|
              config.vm.box = "generic/freebsd${{matrix.version}}"
              config.vm.box_version = "4.2.16"
              config.vm.provider "virtualbox" do |vb|
                vb.memory = "2048"
              end
              config.vm.synced_folder "${{github.workspace}}", "/home/vagrant/${{github.repository}}", type: "rsync"
              config.vm.provision "shell", path: "run.sh"
            end
          EOF

      - run: cat Vagrantfile
      - run: cat run.sh

      - run: vagrant --version
      - run: vagrant up --provision
      - run: vagrant ssh-config

      - run: scp -i .vagrant/machines/default/virtualbox/private_key -o StrictHostKeyChecking=no -r -P 2222 vagrant@127.0.0.1:/home/vagrant/*.tar.xz .

      - run: ls

      - run: gh release create $(date +%Y%m%d) *.tar.xz --notes 'new release'
