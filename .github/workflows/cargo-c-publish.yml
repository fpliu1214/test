name: publish cargo-c

on:
  workflow_dispatch:
  schedule:
    - cron: '0 4 * * *'

jobs:
  netbsd-amd64:
    runs-on: macos-12

    steps:
      - uses: leleliu008/github-actions-vagrant@main
        with:
          mem: 2048
          box: generic/netbsd9
          run: |
            export HOME=/home/vagrant

            run sudo sed -i 's/#ETCCERTSDIR=/ETCCERTSDIR=/' /usr/pkg/etc/ca-certificates-dir.conf
            run sudo update-ca-certificates

            unset ETCCERTSDIR

            ETCCERTSDIR=$(sed -n '/^ETCCERTSDIR=/p' /usr/pkg/etc/ca-certificates-dir.conf | sed 's|ETCCERTSDIR=\(.*\)|\1|')

            if [ -n "$ETCCERTSDIR" ] ; then
                export SSL_CERT_FILE="$ETCCERTSDIR/ca-certificates.crt"
            fi

            run curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/bin/ppkg
            run chmod a+x ppkg
            run ./ppkg setup --use-system-package-manager
            run ./ppkg update
            run ./ppkg install cargo-c --link-type=static-only --install-lib=static
            run ./ppkg pack    cargo-c

      - run: scp -i $VAGRANT_CWD/.vagrant/machines/default/virtualbox/private_key -o StrictHostKeyChecking=no -r -P 2222 vagrant@127.0.0.1:/home/vagrant/.ppkg/packed/cargo-c-*-netbsd-amd64.tar.xz .

      - uses: actions/upload-artifact@v3
        with:
          name: cargo-c-netbsd-amd64-tar-xz
          path: ${{ github.workspace }}/cargo-c-*-netbsd-amd64.tar.xz

  openbsd-amd64:
    needs: netbsd-amd64
    runs-on: macos-12

    steps:
      - run: brew install openssh

      - uses: leleliu008/github-actions-vagrant@main
        with:
          mem: 2048
          box: generic/openbsd7
          run: |
            run sudo pkg_add curl

            export HOME=/home/vagrant
            export LD_LIBRARY_PATH=/usr/local/lib

            run sudo ln -sf /usr/local/bin/pkgconf /usr/bin/pkg-config

            run curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/bin/ppkg
            run chmod a+x ppkg
            run ./ppkg setup --use-system-package-manager
            run ./ppkg update
            run ./ppkg install cargo-c --link-type=static-only --install-lib=static
            run ./ppkg pack    cargo-c

      - run: scp -i $VAGRANT_CWD/.vagrant/machines/default/virtualbox/private_key -o StrictHostKeyChecking=no -r -P 2222 vagrant@127.0.0.1:/home/vagrant/.ppkg/packed/cargo-c-*-openbsd-amd64.tar.xz .

      - uses: actions/upload-artifact@v3
        with:
          name: cargo-c-openbsd-amd64-tar-xz
          path: ${{ github.workspace }}/cargo-c-*-openbsd-amd64.tar.xz

  freebsd-amd64:
    needs: openbsd-amd64
    runs-on: macos-12

    steps:
      - uses: leleliu008/github-actions-vagrant@main
        with:
          mem: 2048
          box: generic/freebsd13
          run: |
            export HOME=/home/vagrant

            run pkg install -y curl libnghttp2

            run curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/bin/ppkg
            run chmod a+x ppkg
            run ./ppkg setup --use-system-package-manager
            run ./ppkg update
            run ./ppkg install cargo-c --link-type=static-only --install-lib=static
            run ./ppkg pack    cargo-c

      - run: scp -i $VAGRANT_CWD/.vagrant/machines/default/virtualbox/private_key -o StrictHostKeyChecking=no -r -P 2222 vagrant@127.0.0.1:/home/vagrant/.ppkg/packed/cargo-c-*-freebsd-amd64.tar.xz .

      - uses: actions/upload-artifact@v3
        with:
          name: cargo-c-freebsd-amd64-tar-xz
          path: ${{ github.workspace }}/cargo-c-*-freebsd-amd64.tar.xz

  macos:
    needs: freebsd-amd64

    strategy:
      fail-fast: false
      matrix:
        target-version: ['11.0', '12.0', '13.0']
        target-arch: [x86_64, arm64]

    runs-on: macos-12

    steps:
      - run: brew uninstall go@1.17
      - run: brew update
      - run: brew install --overwrite python@3.10 python@3.11

      - run: curl -LO https://raw.githubusercontent.com/leleliu008/xcpkg/dev/bin/xcpkg
      - run: chmod a+x xcpkg
      - run: ./xcpkg setup --use-brew
      - run: ./xcpkg update
      - run: ./xcpkg install MacOSX/${{ matrix.target-version }}/${{ matrix.target-arch }}/cargo-c --link-type=static-prefered --install-lib=static
      - run: ./xcpkg pack    MacOSX/${{ matrix.target-version }}/${{ matrix.target-arch }}/cargo-c -o .

      - uses: actions/upload-artifact@v3
        with:
          name: cargo-c-macos${{ matrix.target-version }}-${{ matrix.target-arch }}-tar-xz
          path: ${{ github.workspace }}/cargo-c-*.tar.xz

  linux-aarch64:
    needs: macos
    runs-on: ubuntu-latest

    steps:
      - run: |
          cat > run.sh <<EOF
          set -e

          COLOR_GREEN='\033[0;32m'        # Green
          COLOR_PURPLE='\033[0;35m'       # Purple
          COLOR_OFF='\033[0m'             # Reset

          echo() {
              printf '%b\n' "\$*"
          }

          run() {
              echo "\${COLOR_PURPLE}==>\${COLOR_OFF} \${COLOR_GREEN}\$@\${COLOR_OFF}"
              eval "\$*"
          }

          run uname -a

          run wget https://raw.githubusercontent.com/leleliu008/ppkg/master/bin/ppkg
          run chmod a+x ppkg
          run ./ppkg setup --use-system-package-manager
          run ./ppkg update
          run ./ppkg install cargo-c gh --link-type=static-only --install-lib=static
          run ./ppkg pack    cargo-c

          ls ~/.ppkg/packed/cargo-c-*.tar.xz > filepath.txt
          EOF

          chmod +x run.sh

      # https://github.com/multiarch/qemu-user-static
      - run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - run: docker run -v $PWD:$PWD -w $PWD --name alpine arm64v8/alpine sh run.sh
      - run: docker cp alpine:$(cat filepath.txt) .

      - run: ls

      - uses: actions/upload-artifact@v3
        with:
          name: cargo-c-linux-aarch64-tar-xz
          path: cargo-c-*-linux-aarch64.tar.xz

  linux-x86_64:
    needs: linux-aarch64
    runs-on: ubuntu-latest

    container: alpine:3.16

    env:
      RELEASE_TOKEN: ${{ secrets.RELEASE_TOKEN }}

    steps:
      - run: apk update
      - run: apk add git

      - uses: actions/checkout@v3

      - run: wget https://raw.githubusercontent.com/leleliu008/ppkg/master/bin/ppkg
      - run: chmod a+x ppkg
      - run: ./ppkg setup --use-system-package-manager
      - run: ./ppkg update
      - run: ./ppkg install cargo-c gh --link-type=static-only --install-lib=static
      - run: ./ppkg pack    cargo-c

      - uses: actions/download-artifact@v3
        with:
          name: cargo-c-netbsd-amd64-tar-xz
          path: ~/.ppkg/packed/

      - uses: actions/download-artifact@v3
        with:
          name: cargo-c-openbsd-amd64-tar-xz
          path: ~/.ppkg/packed/

      - uses: actions/download-artifact@v3
        with:
          name: cargo-c-freebsd-amd64-tar-xz
          path: ~/.ppkg/packed/

      - uses: actions/download-artifact@v3
        with:
          name: cargo-c-macos11.0-x86_64-tar-xz
          path: ~/.ppkg/packed/

      - uses: actions/download-artifact@v3
        with:
          name: cargo-c-macos12.0-x86_64-tar-xz
          path: ~/.ppkg/packed/

      - uses: actions/download-artifact@v3
        with:
          name: cargo-c-macos13.0-x86_64-tar-xz
          path: ~/.ppkg/packed/

      - uses: actions/download-artifact@v3
        with:
          name: cargo-c-macos11.0-arm64-tar-xz
          path: ~/.ppkg/packed/

      - uses: actions/download-artifact@v3
        with:
          name: cargo-c-macos12.0-arm64-tar-xz
          path: ~/.ppkg/packed/

      - uses: actions/download-artifact@v3
        with:
          name: cargo-c-macos13.0-arm64-tar-xz
          path: ~/.ppkg/packed/

      - uses: actions/download-artifact@v3
        with:
          name: cargo-c-linux-aarch64-tar-xz
          path: ~/.ppkg/packed/

      - uses: actions/download-artifact@v3
        with:
          name: cargo-c---manpages-tar-xz
          path: ~/.ppkg/packed/

      - run: ls -a
      - run: ls ~/.ppkg/packed

      - run: printf '%s\n' "$RELEASE_TOKEN" | ~/.ppkg/installed/gh/bin/gh auth login --with-token

      - run: git config --global --add safe.directory /__w/test/test

      - run: |
          cd ~/.ppkg/packed
          sed -n '/^git-sha:/p' ~/.ppkg/installed/cargo-c/.ppkg/receipt.yml      > notes.md
          printf '\nsha256sum:\n```\n%s\n```\n' "$(sha256sum cargo-c-*.tar.xz)" >> notes.md

      - run: |
          V=$(ls ~/.ppkg/packed/cargo-c-*-linux-x86_64.tar.xz | cut -d- -f2)
          ~/.ppkg/installed/gh/bin/gh release create $V ~/.ppkg/packed/cargo-c-*.tar.xz --notes-file ~/.ppkg/packed/notes.md
