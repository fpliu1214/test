name: cross compile with android-ndk

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  cross-compile-for-android:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, macos-10.15, macos-11]
        target-abi: [armeabi-v7a, arm64-v8a, x86, x86_64]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - run:  brew install tree file

      - name: install ndk-pkg
        run: |
          brew tap leleliu008/fpliu
          brew install ndk-pkg

      - run:  tree --version
      - run:  file --version
      - run:  make --version
      - run:  ndk-pkg --version

      - run:  ndk-pkg update
      - run:  cp tbb.sh ~/.ndk-pkg/repos.d/offical/formula/
      - run:  ndk-pkg install tbb     --tree
      - run:  ndk-pkg install xxhash  --tree
      - run:  ndk-pkg install openssl --tree

      - name: create config
        run:  |
          cat > "$HOME/.ndk-pkg/repos.d/offical/formula/mold.sh" <<EOF
          package set summary "Modern Linker"
          package set git.url "https://github.com/rui314/mold.git"
          package set src.url "dir://$PWD"
          package set license "AGPL-3.0-only"
          package set dep.pkg "tbb xxhash openssl"
          package set bsystem "make"
          package set binsrcd "yes"

          build() {
              printf 'INPUT(-lc)\n' > librt.a
              export LDFLAGS="\$LDFLAGS -L\$PWD"
              makew clean &&
              makew install PREFIX=\$ABI_INSTALL_DIR OS=Linux LTO=1 SYSTEM_TBB=1 SYSTEM_XXHASH=1
          }
          EOF

      - run:  ndk-pkg install mold --tree

      - run:  tree install.d

      - run:  |
          file install.d/lib/libdeflate.so
          case ${{ matrix.target-abi }} in
            armeabi-v7a) file install.d/lib/mold/mold-wrapper.so | grep 'ELF 32-bit LSB shared object, ARM, EABI5'   ;;
            arm64-v8a)   file install.d/lib/mold/mold-wrapper.so | grep 'ELF 64-bit LSB shared object, ARM aarch64,' ;;
            x86)         file install.d/lib/mold/mold-wrapper.so | grep 'ELF 32-bit LSB shared object, Intel 80386,' ;;
            x86_64)      file install.d/lib/mold/mold-wrapper.so | grep 'ELF 64-bit LSB shared object, x86-64,'      ;;
          esac

      - run:  |
          for item in mold ld.mold ld64.mold
          do
            file install.d/bin/$item
            case ${{ matrix.target-abi }} in
              armeabi-v7a) file install.d/bin/$item | grep 'ELF 32-bit LSB pie executable, ARM, EABI5'   ;;
              arm64-v8a)   file install.d/bin/$item | grep 'ELF 64-bit LSB pie executable, ARM aarch64,' ;;
              x86)         file install.d/bin/$item | grep 'ELF 32-bit LSB pie executable, Intel 80386,' ;;
              x86_64)      file install.d/bin/$item | grep 'ELF 64-bit LSB pie executable, x86-64,'      ;;
            esac
          done
