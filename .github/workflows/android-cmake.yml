name: cross compile with android-ndk

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  cross-compile-for-android:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, macos-10.15, macos-11]
        target-abi: [armeabi-v7a, arm64-v8a, x86, x86_64]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - run:  brew install tree file

      - run:  tree --version
      - run:  file --version
      - run:  make --version

      - run:  echo "ANDROID_NDK_HOME=${ANDROID_NDK_LATEST_HOME}" >> "$GITHUB_ENV"

      - run:  |
          env | sed -n '/^ANDROID_/p'

      - run:  cat "$ANDROID_NDK_HOME/source.properties"

      - name: build for ${{ matrix.target-abi }}
        run: |
          git clone https://github.com/rui314/mold
          cd mold

          #export ANDROID_NDK_HOME="$ANDROID_NDK_LATEST_HOME"


          #ANDROID_NDK_VERS=$(grep "Pkg.Revision" "$ANDROID_NDK_HOME/source.properties" | cut -d " " -f3)
          #printf 'ANDROID_NDK_VERS = %s\n\n' "$ANDROID_NDK_VERS"

          run cmake \
              -DCMAKE_TOOLCHAIN_FILE='$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake' \
              -DCMAKE_INSTALL_PREFIX=$PWD/install.d \
              -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_VERBOSE_MAKEFILE=ON  \
              -DCMAKE_COLOR_MAKEFILE=ON \
              -DANDROID_TOOLCHAIN=clang \
              -DANDROID_ABI=${{ matrix.target-abi }} \
              -DANDROID_PLATFORM=21 \
              -G Ninja
              -S . \
              -B build.d
          
      - run: cmake --build   build.d

      - run: cmake --install build.d

      - run: tree install.d

      - run: |
          file install.d/lib/libdeflate.so
          case ${{ matrix.target-abi }} in
            armeabi-v7a) file install.d/lib/libdeflate.so     | grep 'ELF 32-bit LSB shared object, ARM, EABI5'   ;;
            arm64-v8a)   file install.d/lib/libdeflate.so     | grep 'ELF 64-bit LSB shared object, ARM aarch64,' ;;
            x86)         file install.d/lib/libdeflate.so     | grep 'ELF 32-bit LSB shared object, Intel 80386,' ;;
            x86_64)      file install.d/lib/libdeflate.so     | grep 'ELF 64-bit LSB shared object, x86-64,'      ;;
          esac

      - run:  |
          file install.d/bin/libdeflate-gzip
          case ${{ matrix.target-abi }} in
            armeabi-v7a) file install.d/bin/libdeflate-gzip   | grep 'ELF 32-bit LSB pie executable, ARM, EABI5'   ;;
            arm64-v8a)   file install.d/bin/libdeflate-gzip   | grep 'ELF 64-bit LSB pie executable, ARM aarch64,' ;;
            x86)         file install.d/bin/libdeflate-gzip   | grep 'ELF 32-bit LSB pie executable, Intel 80386,' ;;
            x86_64)      file install.d/bin/libdeflate-gzip   | grep 'ELF 64-bit LSB pie executable, x86-64,'      ;;
          esac

      - run:  |
          file install.d/bin/libdeflate-gunzip
          case ${{ matrix.target-abi }} in
            armeabi-v7a) file install.d/bin/libdeflate-gunzip | grep 'ELF 32-bit LSB pie executable, ARM, EABI5'   ;;
            arm64-v8a)   file install.d/bin/libdeflate-gunzip | grep 'ELF 64-bit LSB pie executable, ARM aarch64,' ;;
            x86)         file install.d/bin/libdeflate-gunzip | grep 'ELF 32-bit LSB pie executable, Intel 80386,' ;;
            x86_64)      file install.d/bin/libdeflate-gunzip | grep 'ELF 64-bit LSB pie executable, x86-64,'      ;;
          esac
