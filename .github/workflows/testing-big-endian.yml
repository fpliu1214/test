name: run units target on a big endian architecture

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  s390x:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: universal-ctags/ctags

      - name: install alpine-s390x-rootfs
        run: |
          mkdir alpine-s390x-rootfs
          curl -LO https://dl-cdn.alpinelinux.org/alpine/v3.16/releases/s390x/alpine-minirootfs-3.16.2-s390x.tar.gz
          tar xf alpine-minirootfs-3.16.2-s390x.tar.gz -C alpine-s390x-rootfs

      - name: install proot
        run: |
          curl -LO https://github.com/leleliu008/uppm-package-repository-linux-x86_64/releases/download/2022.09.23/proot-5.3.1-linux-x86_64.tar.xz
          tar vxf proot-5.3.1-linux-x86_64.tar.xz
          ln -s proot-5.3.1-linux-x86_64/bin/proot proot

      - run: sudo apt-get -y update
      - run: sudo apt-get -y install qemu-user

      - run: ./proot -S alpine-s390x-rootfs -q qemu-s390x /sbin/apk update
      - run: ./proot -S alpine-s390x-rootfs -q qemu-s390x /sbin/apk add git gdb procps llvm13 clang libc-dev automake autoconf pkgconf make libxml2-dev jansson-dev yaml pcre2-dev findutils diffutils

      - run: ./proot -S alpine-s390x-rootfs -q qemu-s390x ./autogen.sh
      - run: ./proot -S alpine-s390x-rootfs -q qemu-s390x ./configure --enable-debugging || (cat config.log; exit 1)
      - run: ./proot -S alpine-s390x-rootfs -q qemu-s390x make -j $(nproc)
      - run: ./proot -S alpine-s390x-rootfs -q qemu-s390x readelf -h ctags
      - run: ./proot -S alpine-s390x-rootfs -q qemu-s390x make check
