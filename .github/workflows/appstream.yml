name: publish appstream

on:
  workflow_dispatch:

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        #target-arch: [x86_64, aarch64, ppc64le, riscv64, s390x]
        target-arch: [x86_64]

    runs-on: ubuntu-latest

    steps:
      - run: |
          cat > run.sh <<EOF
          set -e

          COLOR_GREEN='\033[0;32m'        # Green
          COLOR_PURPLE='\033[0;35m'       # Purple
          COLOR_OFF='\033[0m'             # Reset

          echo() {
              printf '%b\n' "\$*"
          }

          run() {
              echo "\${COLOR_PURPLE}==>\${COLOR_OFF} \${COLOR_GREEN}\$@\${COLOR_OFF}"
              eval "\$*"
          }

          run uname -a

          run apk update
          run apk add g++ libc-dev linux-headers

          run wget https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
          run chmod a+x ppkg

          run ./ppkg setup
          run ./ppkg update

          sed -i '/^dep-pkg: /s|systemd||'       ~/.ppkg/repos.d/official-core/formula/appstream.yml
          sed -i 's|systemd=true|systemd=false|' ~/.ppkg/repos.d/official-core/formula/appstream.yml

          run ./ppkg install appstream --static
          run ./ppkg pack    appstream --exclude include/ --exclude lib/
          EOF

          chmod +x run.sh

      # https://github.com/multiarch/qemu-user-static
      - if: matrix.target-arch != 'x86_64'
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - if: matrix.target-arch == 'x86_64'
        run: docker run -v $PWD:/root -w /root --name alpine         alpine sh run.sh

      - if: matrix.target-arch == 'aarch64'
        run: docker run -v $PWD:/root -w /root --name alpine arm64v8/alpine sh run.sh

      - if: matrix.target-arch == 'ppc64le'
        run: docker run -v $PWD:/root -w /root --name alpine ppc64le/alpine sh run.sh

      - if: matrix.target-arch == 'riscv64'
        run: docker run -v $PWD:/root -w /root --name alpine riscv64/alpine sh run.sh

      - if: matrix.target-arch == 's390x'
        run: docker run -v $PWD:/root -w /root --name alpine   s390x/alpine sh run.sh

      - uses: actions/upload-artifact@v4
        with:
          name: appstream---linux-${{ matrix.target-arch }}.tar.xz
          path: appstream-*-linux-${{ matrix.target-arch }}.tar.xz
