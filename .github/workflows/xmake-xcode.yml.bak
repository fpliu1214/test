name: Build with xcode

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  xcode:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, macos-10.15]
        target: [macosx/x86_64, macosx/arm64, iphoneos/arm64, iphoneos/arm64e]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          repository: 'xmake-io/xmake'
          submodules: 'recursive'

      - run: brew install tree file xmake

      - run: tree  --version
      - run: file  --version
      - run: xmake --version

      - name: build and install xmake for ${{ matrix.target }}
        run: |
          PLAT=$(printf '%s\n' ${{ matrix.target }} | cut -d/ -f1)
          ARCH=$(printf '%s\n' ${{ matrix.target }} | cut -d/ -f2)
          cd core
          sed -i .bak 's|system(cmd)|execl("/bin/sh" "sh" "-c", cmd, (char*)NULL)|' src/lua/lua/loslib.c
          xmake config --clean -vD --mode=release --plat=$PLAT --arch=$ARCH --toolchain=xcode --buildir=./build.d --curses=no --arflags=-crs
          xmake
          xmake install -o   ../install.d
          cp ./build.d/xmake ../install.d/bin

      - run: tree install.d

      - run: otool -L install.d/bin/xmake

      - name: check if installed xmake is Mach-O executable
        run: |
          XMAKE=install.d/bin/xmake
          file $XMAKE
          case ${{ matrix.target }} in
            */x86_64)  file $XMAKE | grep 'Mach-O 64-bit executable x86_64'   ;;
            */arm64)   file $XMAKE | grep 'Mach-O 64-bit executable arm64'    ;;
            */arm64e)  file $XMAKE | grep 'Mach-O 64-bit executable arm64e'   ;;
          esac
