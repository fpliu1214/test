name: run units target on a big endian architecture

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  s390x:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: universal-ctags/ctags

      - run: sudo apt-get -y update
      - run: sudo apt-get -y install qemu-user debootstrap

      - run: sudo debootstrap --variant=minbase --arch=s390x jammy alpine-s390x-rootfs/ http://ports.ubuntu.com/

      - name: install proot
        run: |
          curl -LO https://github.com/leleliu008/uppm-package-repository-linux-x86_64/releases/download/2022.09.23/proot-5.3.1-linux-x86_64.tar.xz
          tar vxf proot-5.3.1-linux-x86_64.tar.xz
          ln -s proot-5.3.1-linux-x86_64/bin/proot proot

      - run: ./proot -S alpine-s390x-rootfs -q qemu-s390x apt-get -y update
      - run: ./proot -S alpine-s390x-rootfs -q qemu-s390x apt-get -y install git gdb procps gcc automake autoconf pkg-config make libxml2-dev libjansson-dev libyaml-dev libpcre2-dev findutils diffutils

        #- run: ./proot -S alpine-s390x-rootfs -q qemu-s390x ln -sf /usr/bin/clang /usr/bin/gcc
        #- run: ./proot -S alpine-s390x-rootfs -q qemu-s390x ln -sf /usr/bin/clang /usr/bin/cc
      - run: ./proot -S alpine-s390x-rootfs -q qemu-s390x bash ./autogen.sh
      - run: ./proot -S alpine-s390x-rootfs -q qemu-s390x bash ./configure --enable-debugging CC=/usr/bin/clang || (cat config.log; exit 1)
      - run: ./proot -S alpine-s390x-rootfs -q qemu-s390x nproc
      - run: ./proot -S alpine-s390x-rootfs -q qemu-s390x make -j $(nproc)
      - run: ./proot -S alpine-s390x-rootfs -q qemu-s390x readelf -h ctags
      - run: ./proot -S alpine-s390x-rootfs -q qemu-s390x make check SHELL=/bin/bash
