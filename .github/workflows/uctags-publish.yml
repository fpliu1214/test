name: publish

on:
  workflow_dispatch

jobs:
  netbsd:
    runs-on: macos-12

    steps:
      - uses: actions/checkout@v3

      - uses: leleliu008/github-actions-vagrant@main
        with:
          mem: 2048
          box: generic/netbsd9
          run: |
            run sudo sed -i 's/#ETCCERTSDIR=/ETCCERTSDIR=/' /usr/pkg/etc/ca-certificates-dir.conf
            run sudo update-ca-certificates

            unset ETCCERTSDIR

            ETCCERTSDIR=$(sed -n '/^ETCCERTSDIR=/p' /usr/pkg/etc/ca-certificates-dir.conf | sed 's|ETCCERTSDIR=\(.*\)|\1|')

            if [ -n "$ETCCERTSDIR" ] ; then
                export SSL_CERT_FILE="$ETCCERTSDIR/ca-certificates.crt"
            fi

            run curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/bin/ppkg
            run chmod a+x ppkg
            run ./ppkg setup --use-system-package-manager
            run ./ppkg update
            run ./ppkg install uctags --link-type=static-only --install-lib=static
            run ./ppkg pack    uctags

      - run:  scp -i $VAGRANT_CWD/.vagrant/machines/default/virtualbox/private_key -o StrictHostKeyChecking=no -r -P 2222 vagrant@127.0.0.1:~/.ppkg/packed/uctags-1.0.0-netbsd-amd64.tar.xz .

      - uses: actions/upload-artifact@v2
        with:
          name: uctags-netbsd-tar-xz
          path: ${{ github.workspace }}/uctags-*.tar.xz

  openbsd:
    needs: netbsd
    runs-on: macos-12

    steps:
      - uses: actions/checkout@v3

      - uses: leleliu008/github-actions-vagrant@main
        with:
          mem: 2048
          box: generic/openbsd7
          run: |
            run sudo pkg_add curl

            export LD_LIBRARY_PATH=/usr/local/lib

            run curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/bin/ppkg
            run chmod a+x ppkg
            run ./ppkg setup --use-system-package-manager
            run ./ppkg update
            run sudo ln -sf /usr/local/bin/pkgconf /usr/bin/pkg-config
            run ./ppkg install uctags --link-type=static-only --install-lib=static
            run ./ppkg pack    uctags

      - run: scp -i $VAGRANT_CWD/.vagrant/machines/default/virtualbox/private_key -o StrictHostKeyChecking=no -r -P 2222 vagrant@127.0.0.1:~/.ppkg/packed/uctags-1.0.0-openbsd-amd64.tar.xz .

      - uses: actions/upload-artifact@v2
        with:
          name: uctags-openbsd-tar-xz
          path: ${{ github.workspace }}/uctags-*.tar.xz

  freebsd:
    needs: openbsd
    runs-on: macos-12

    steps:
      - uses: actions/checkout@v3

      - uses: leleliu008/github-actions-vagrant@main
        with:
          mem: 2048
          box: generic/freebsd13
          run: |
            run pkg install -y curl

            run curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/bin/ppkg
            run chmod a+x ppkg
            run ./ppkg setup --use-system-package-manager
            run ./ppkg update
            run ./ppkg install uctags --link-type=static-only --install-lib=static
            run ./ppkg pack    uctags

      - run:  scp -i $VAGRANT_CWD/.vagrant/machines/default/virtualbox/private_key -o StrictHostKeyChecking=no -r -P 2222 vagrant@127.0.0.1:~/.ppkg/packed/uctags-1.0.0-freebsd-amd64.tar.xz .

      - uses: actions/upload-artifact@v2
        with:
          name: uctags-freebsd-tar-xz
          path: ${{ github.workspace }}/uctags-*.tar.xz


  macos:
    needs: freebsd
    runs-on: macos-latest

    env:
      ACLOCAL_PATH: /usr/local/share/aclocal
      MACOSX_DEPLOYMENT_TARGET: 10.15

    steps:
      - uses: actions/checkout@main

      - run: brew uninstall go@1.17

      - run: brew update
      - run: brew install --overwrite python@3.10 python@3.11

      - run: wget https://raw.githubusercontent.com/leleliu008/ppkg/master/bin/ppkg
      - run: chmod a+x ppkg
      - run: ./ppkg setup --use-system-package-manager
      - run: ./ppkg update
      - run: ./ppkg install uctags --link-type=static-prefered --install-lib=static
      - run: ./ppkg pack    uctags

      - uses: actions/upload-artifact@v2
        with:
          name: uctags-macos-tar-xz
          path: ~/.ppkg/packed/*.tar.xz

  linux:
    needs: macos
    runs-on: ubuntu-latest

    container: alpine:3.16

    env:
      ACLOCAL_PATH: /usr/share/aclocal
      RELEASE_TOKEN: ${{ secrets.RELEASE_TOKEN }}

    steps:
      - run: apk update
      - run: apk add git

      - uses: actions/checkout@main

      - run: wget https://raw.githubusercontent.com/leleliu008/ppkg/master/bin/ppkg
      - run: chmod a+x ppkg
      - run: ./ppkg setup --use-system-package-manager
      - run: ./ppkg update
      - run: ./ppkg install uctags gh --link-type=static-only --install-lib=static
      - run: ./ppkg pack    uctags

      - uses: actions/download-artifact@v2
        with:
          name: uctags-netbsd-tar-xz
          path: ~/.ppkg/packed/

      - uses: actions/download-artifact@v2
        with:
          name: uctags-openbsd-tar-xz
          path: ~/.ppkg/packed/

      - uses: actions/download-artifact@v2
        with:
          name: uctags-freebsd-tar-xz
          path: ~/.ppkg/packed/

      - uses: actions/download-artifact@v2
        with:
          name: uctags-macos-tar-xz
          path: ~/.ppkg/packed/

      - run: ls -a
      - run: ls ~/.ppkg/packed

      - run: printf '%s\n' "$RELEASE_TOKEN" | ~/.ppkg/installed/gh/bin/gh auth login --with-token

      - run: git config --global --add safe.directory /__w/test/test

      - run: ~/.ppkg/installed/gh/bin/gh release create $(./ppkg info uctags version) ~/.ppkg/packed/*
